plugins {
    id "io.qameta.allure" version "2.11.2"
    id 'java-library'
}

group 'org.example'
version '1.0-SNAPSHOT'

def allureVersion = "2.19.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {


    implementation('com.codeborne:selenide:6.14.0',
            "io.qameta.allure:allure-selenide:$allureVersion",
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'org.slf4j:slf4j-simple:2.0.7',
            "org.aeonbits.owner:owner:1.0.12",
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')

}

tasks.withType(javax.tools.JavaCompiler).configureEach {
    option.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smoke_test(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}
